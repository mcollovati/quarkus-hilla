<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.github.mcollovati</groupId>
        <artifactId>quarkus-hilla-parent</artifactId>
        <version>${revision}</version>
    </parent>

    <artifactId>quarkus-hilla-react</artifactId>
    <name>Quarkus - Hilla - React - Runtime</name>
    <description>
        <![CDATA[A Quarkus extension to run Hilla React applications on Quarkus.]]></description>
    <dependencies>
        <dependency>
            <groupId>com.github.mcollovati</groupId>
            <artifactId>quarkus-hilla-commons</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.mcollovati</groupId>
            <artifactId>hilla-react-jandex</artifactId>
            <version>${project.version}</version>
        </dependency>

    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>io.quarkus</groupId>
                <artifactId>quarkus-extension-maven-plugin</artifactId>
                <version>${quarkus.version}</version>
                <configuration>
                    <removedResources>
                        <artifact>
                            <key>com.github.mcollovati:hilla-react-jandex</key>
                            <!--
                            There should be no newlines in the classes list, otherwise the filter silently
                            fails at runtime
                            @formatter:off
                            -->
                            <resources>com/vaadin/hilla/ConditionalOnFeatureFlag.class,com/vaadin/hilla/EndpointControllerConfiguration.class,com/vaadin/hilla/FeatureFlagCondition.class,com/vaadin/hilla/startup/EndpointsValidator.class,com/vaadin/hilla/push/PushConfigurer.class</resources>
                            <!-- @formatter:on -->
                        </artifact>
                        <artifact>
                            <key>com.vaadin.hilla:endpoint</key>
                            <!--
                            There should be no newlines in the classes list, otherwise the filter silently
                            fails at runtime
                            @formatter:off
                            -->
                            <resources>com/vaadin/hilla/ConditionalOnFeatureFlag.class,com/vaadin/hilla/EndpointControllerConfiguration.class,com/vaadin/hilla/FeatureFlagCondition.class,com/vaadin/hilla/startup/EndpointsValidator.class,com/vaadin/hilla/push/PushConfigurer.class</resources>
                            <!-- @formatter:on -->
                        </artifact>
                        <artifact>
                            <key>com.vaadin.hilla:hilla-dev-mode</key>
                            <!--
                            There should be no newlines in the classes list, otherwise the filter silently
                            fails at runtime
                            @formatter:off
                            -->
                            <resources>META-INF/services/com.vaadin.base.devserver.DevToolsMessageHandler</resources>
                            <!-- @formatter:on -->
                        </artifact>
                    </removedResources>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>extension-descriptor</goal>
                        </goals>
                        <configuration>
                            <deployment>${project.groupId}:${project.artifactId}-deployment:${project.version}
                            </deployment>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>io.quarkus</groupId>
                            <artifactId>quarkus-extension-processor</artifactId>
                            <version>${quarkus.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>process-codestart</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <escapeString>\</escapeString>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/main/codestarts</directory>
                                    <includes>
                                        <include>**/codestart.yml</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>${project.basedir}/src/main/codestarts</directory>
                                    <excludes>
                                        <exclude>**/codestart.yml</exclude>
                                    </excludes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                            <outputDirectory>${project.build.directory}/filtered-codestarts/codestarts</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-codestart-jar</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classesDirectory>${project.build.directory}/filtered-codestarts</classesDirectory>
                            <includes>
                                <include>codestarts/**</include>
                            </includes>
                            <excludes>
                                <exclude>codestarts/**/hilla-scaffold-package-name-holder.txt</exclude>
                            </excludes>
                            <classifier>codestarts</classifier>
                            <skipIfEmpty>true</skipIfEmpty>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>update-hilla-codestart</id>
            <build>
                <defaultGoal>org.codehaus.mojo:build-helper-maven-plugin:bsh-property@hilla-scaffold</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>hilla-scaffold</id>
                                <goals>
                                    <goal>bsh-property</goal>
                                </goals>
                                <configuration>
                                    <source><![CDATA[
import java.nio.file.CopyOption;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;
import java.nio.file.attribute.FileAttribute;
import java.util.List;
import com.vaadin.hilla.plugin.base.HillaAppInitUtility;

void deleteDirectory(File directoryToBeDeleted) {
    if (directoryToBeDeleted.exists()) {
        File[] allContents = directoryToBeDeleted.listFiles();
        if (allContents != null) {
            for (File file : allContents) {
                deleteDirectory(file);
            }
        }
        directoryToBeDeleted.delete();
    }
}
codeStartFolder = project.getBasedir().toPath().resolve(
    Path.of("src", new String[] { "main", "codestarts", "quarkus", "quakus-hilla-maven-codestart", "base" })
);
HillaAppInitUtility.scaffold(codeStartFolder, List.of("hilla-react"));
javaSrcFolder = codeStartFolder.resolve("../java/src/main/java");
deleteDirectory(javaSrcFolder.toFile());
Files.createDirectories(javaSrcFolder, new FileAttribute[0]);
Files.move(codeStartFolder.resolve("src/main/java"), javaSrcFolder, new CopyOption[] { StandardCopyOption.REPLACE_EXISTING } );
                            ]]></source>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.vaadin.hilla</groupId>
                                <artifactId>plugin-base</artifactId>
                                <version>${hilla.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>distribution</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <includeDependencySources>true</includeDependencySources>
                            <dependencySourceIncludes>
                                <dependencySourceInclude>${project.groupId}:quarkus-hilla-commons
                                </dependencySourceInclude>
                            </dependencySourceIncludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
