name: Quarkus Hilla Validation
on:
  push:
    branches: [main]
  workflow_dispatch:
  pull_request_target:
    types: [opened, synchronize, reopened, edited]
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write
concurrency:
  group: ${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true
env:
  JAVA_VERSION: 17
jobs:
  check-permissions:
    runs-on: ubuntu-22.04
    steps:
      - run: echo "Concurrency Group = ${{ github.head_ref || github.ref_name }}"
      - uses: actions-cool/check-user-permission@main
        id: checkUser
        with:
          username: ${{github.triggering_actor}}
          require: 'write'
      - name: Fail on workflow triggered by external contributor
        if: ${{ steps.checkUser.outputs.require-result != 'true' && github.actor != 'dependabot[bot]' }}
        run: |
          echo "ðŸš« **${{ github.actor }}** is an external contributor, a **${{ github.repository }}** team member has to review this changes and re-run this build" \
            | tee -a $GITHUB_STEP_SUMMARY && exit 1
  build-and-test:
    needs: [check-permissions]
    timeout-minutes: 30
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven
      - uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable
      - name: Build
        run: |
          set -x -e -o pipefail
          mvn -V -e -B -ntp -DskipTests -Dmaven.javadoc.skip=false install
      - name: Test
        run: |
          set -x -e -o pipefail
          mvn -V -e -B -ntp verify -Dmaven.javadoc.skip=false -DtrimStackTrace=false
      - name: Package test output files
        if: ${{ failure() || success() }}
        run: find . -name surefire-reports -o -name failsafe-reports -o -name error-screenshots | tar -czf tests-report.tgz -T -
      - uses: actions/upload-artifact@v3
        if: ${{ failure() || success() }}
        with:
          name: tests-output
          path: tests-report.tgz
      - name: Publish Unit Test Results
        if: ${{ failure() || success() }}
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          junit_files: "**/target/*-reports/TEST*.xml"
          check_run_annotations: all tests, skipped tests
  checkstyle:
    needs: [check-permissions]
    timeout-minutes: 5
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven
      - name: Check
        id: spotlessCheck
        run: |
          set -x -e -o pipefail
          mvn -V -e -B -ntp spotless:check
      - name: Prepare failure message
        if: ${{ failure() && steps.spotlessCheck.conclusion == 'failure' }}
        run: |
          set -x -e -o pipefail
          git diff --output=/tmp/full-diff.txt 
          git diff --name-only --output=/tmp/unformatted.txt
          _files=$(wc -l /tmp/unformatted.txt)
          echo "# Format Checker Report" >> /tmp/message
          echo "" >> /tmp/message
          echo "There are *${_files} files* with format errors" >> /tmp/message
          echo "" >> /tmp/message
          echo '* To fix the build, please run `mvn spotless:apply` in your branch and commit the changes.' >> /tmp/message 
          echo '* In alternative apply the `automation/format` label to the PR.' >> /tmp/message
          echo "" >> /tmp/message
          echo "" >> /tmp/message
          echo "Here is the list of files with format issues in your PR:" >> /tmp/message
          echo '```' >> /tmp/message
          cat /tmp/unformatted.txt  >> /tmp/message
          echo '```' >> /tmp/message
          echo "" >> /tmp/message
          echo "" >> /tmp/message
          echo "And here the full diff: " >> /tmp/message
          echo "<details>" >> /tmp/message
          echo "  <summary>Full Diff</summary>" >> /tmp/message
          echo "" >> /tmp/message
          echo '```patch' >> /tmp/message
          cat /tmp/full-diff.txt  >> /tmp/message
          echo '```' >> /tmp/message
          echo "</details>" >> /tmp/message
      - name: Prepare success message
        if: ${{ success() }}
        run: |
          set -x -e -o pipefail
          echo "# Format Checker Report" >> /tmp/message
          echo "" >> /tmp/message
          echo "All files are correctly formatted" >> /tmp/message
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: /tmp/message
          comment_tag: formatting-check

          

    
