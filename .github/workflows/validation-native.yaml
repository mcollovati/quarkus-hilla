name: Quarkus Hilla Native Validation
on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 3'
#  pull_request_target:
#    types: [opened, synchronize, reopened, edited]
permissions:
  contents: read
  issues: read
concurrency:
  group: validation-native-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true
env:
  HEAD_REF: ${{ github.head_ref }}
  REF_NAME: ${{ github.ref_name }}
  HEAD_SHA: ${{ github.event.pull_request.head.sha }}
jobs:
  check-permissions:
    name: Check User Permissions
    runs-on: ubuntu-latest
    steps:
      - run: echo "Concurrency Group = validation-native-${HEAD_REF:-$REF_NAME}"
      - uses: actions-cool/check-user-permission@7b90a27f92f3961b368376107661682c441f6103 # main
        id: checkUser
        with:
          username: ${{github.triggering_actor}}
          require: 'write'
      - name: Fail on workflow triggered by external contributor
        if: ${{ steps.checkUser.outputs.require-result != 'true' && github.actor != 'dependabot[bot]' && github.actor != 'quarkus-hilla-bot[bot]' }}
        env:
          CMD_ACTOR: ${{ github.actor }}
          CMD_REPO: ${{ github.repository }}
        run: |
          echo "ðŸš« **$CMD_ACTOR** is an external contributor, a **$CMD_REPO** team member has to review this changes and re-run this build" \
            | tee -a $GITHUB_STEP_SUMMARY && exit 1
  changes:
    name: Compute changes
    needs: [check-permissions]
    runs-on: ubuntu-latest
    outputs:
      validation-required: ${{ steps.filter.outputs.validate }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{env.HEAD_SHA}}
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: filter
        with:
          filters: |
            validate:
              - '!(README.md|LICENSE|.gitignore|etc/**)'
  compute-matrix:
    needs: [changes]
    if: ${{ needs.changes.outputs.validation-required == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-matrix.outputs.modules }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{env.HEAD_SHA}}
      - name: Compute matrix
        id: set-matrix
        run: |
          test_modules=$(find integration-tests -maxdepth 1 -mindepth 1 -type d -name "*-tests")
          test_modules=$(while IFS= read -r mod; do test -f $mod/src/main/resources/application.properties && grep -q "%test-security." $mod/src/main/resources/application.properties; echo "{\"name\": \"${mod/integration-tests\//}\", \"path\": \"$mod\", \"security\": $? }"; done <<< "${test_modules}" | jq -s -c '.')
          echo "modules=${test_modules}" >> "$GITHUB_OUTPUT"
  build-and-test-native:
    permissions:
      checks: write
      pull-requests: write
    name: Native tests
    needs: [compute-matrix]
    if: ${{ needs.changes.outputs.validation-required == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        module: ${{fromJson(needs.compute-matrix.outputs.modules)}}
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{env.HEAD_SHA}}
      - name: Set up Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: 23
          distribution: 'graalvm'
          cache: maven
      - uses: browser-actions/setup-chrome@c785b87e244131f27c9f19c1a33e2ead956ab7ce # latest
        id: setup-chrome
        if: ${{ !vars.QH_DISABLE_CHROME_INSTALL }}
        with:
          chrome-version: stable
      - name: Build
        run: |
          set -x -e -o pipefail
          mvn -V -e -B -ntp -DskipTests -Dmaven.javadoc.skip=false install
      - name: Native Test
        run: |
          set -x -e -o pipefail
          mvn -V -e -B -ntp verify -am -DtrimStackTrace=false -Dselenide.browserBinary=${{ steps.setup-chrome.outputs.chrome-path }} -Pit-tests,production -Dnative -pl ${{ matrix.module.path }}
      - name: Native Security Test
        if: ${{ matrix.module.security == 0 }}
        run: |
          set -x -e -o pipefail
          mvn -V -e -B -ntp verify -am -DtrimStackTrace=false -Dselenide.browserBinary=${{ steps.setup-chrome.outputs.chrome-path }} -Pit-tests,production -Dnative -Dquarkus.profile=test-security -pl ${{ matrix.module.path }}
      - name: Package test output files
        if: ${{ failure() || success() }}
        run: find . -name surefire-reports -o -name failsafe-reports -o -name selenide-reports -o -name quarkus.log | tar -czf tests-report-native.tgz -T -
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ failure() || success() }}
        with:
          name: tests-output-it-native-${{ matrix.module.name }}
          path: tests-report-*.tgz
